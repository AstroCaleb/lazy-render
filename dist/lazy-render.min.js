!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).LazyRender=t()}(this,(function(){"use strict";function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function n(e,n){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){r&&(e=r);var o=0,i=function(){};return{s:i,n:function(){return o>=e.length?{done:!0}:{done:!1,value:e[o++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,d=!0,l=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return d=e.done,e},e:function(e){l=!0,a=e},f:function(){try{d||null==r.return||r.return()}finally{if(l)throw a}}}}
/*!
   * lazy-render.js v1.1.1
   * https://github.com/AstroCaleb/lazy-render
   *
   * Copyright 2021-Present Caleb Dudley
   * Released under the MIT license
   */return function t(){var r=this,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(e(this,t),void 0!==o.distanceThreshold&&"number"!=typeof o.distanceThreshold)throw new Error("The distance from viewport for rendering must be a a number, preferably 0-100. A default value of 50 is used if this is not defined. 0 being that the element will render when immediately outside the viewport. 100 being where the element is 100% the viewport height or width away from being in view when rendered.");this.options=o,this.threshold=o.distanceThreshold||50,this.callback=o.callback||function(){},this.lazyRenderThrottleTimeout;var i,a=document.getElementsByTagName("style"),d=!1,l=n(a);try{for(l.s();!(i=l.n()).done;){var s=i.value;s.dataset.lazyRenderStyle&&(d=!0)}}catch(e){l.e(e)}finally{l.f()}if(!d){var c="\n                @keyframes lazyRenderDelayElementIn {\n                    0% { opacity: 0; }\n                    100% { opacity: 1; }\n                }\n                [data-lazy-render] { opacity: 0 !important; }\n                [data-lazy-render].fade-in { animation: lazyRenderDelayElementIn 0.4s ease 0.3s normal forwards; }\n            ",u=document.head||document.getElementsByTagName("head")[0],f=document.createElement("style");f.setAttribute("data-lazy-render-style","lazy-render"),f.appendChild(document.createTextNode(c)),u.appendChild(f)}var h=function(e){var t=e.getBoundingClientRect(),n=window.innerHeight||document.documentElement.clientHeight,o=window.innerWidth||document.documentElement.clientWidth;return t.top>=0-n*(.01*r.threshold)&&t.left>=0-o*(.01*r.threshold)&&t.bottom<=n+n*(.01*r.threshold)&&t.right<=o+o*(.01*r.threshold)},m=function e(){r.lazyRenderThrottleTimeout&&clearTimeout(r.lazyRenderThrottleTimeout),r.lazyRenderThrottleTimeout=setTimeout((function(){document.querySelectorAll("[data-lazy-render]").forEach((function(e){if(h(e)){try{var t=e.dataset.lazyRender.split(";");e[t[0]]=t[1]}catch(e){}e.classList.contains("fade-in")||(e.classList.add("fade-in"),r.callback()),setTimeout((function(){e.classList.remove("fade-in"),delete e.dataset.lazyRender}),700)}})),document.querySelectorAll("[data-lazy-render]").length||(document.removeEventListener("DOMContentLoaded",e,!1),window.removeEventListener("scroll",e,!1),window.removeEventListener("load",e,!1),window.removeEventListener("resize",e,!1),window.removeEventListener("orientationChange",e,!1))}),10)};document.querySelectorAll("[data-lazy-render]").length&&(document.addEventListener("DOMContentLoaded",m,!1),window.addEventListener("scroll",m,!1),window.addEventListener("load",m,!1),window.addEventListener("resize",m,!1),window.addEventListener("orientationChange",m,!1))}}));
